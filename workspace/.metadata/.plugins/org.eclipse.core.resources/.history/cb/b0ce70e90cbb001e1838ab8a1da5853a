package textDocBuilder.abstractions;

import textDocBuilder.factories.AbstractElementFactory;
import textDocBuilder.factories.ConcreteElementFactory;
import textDocBuilder.interfaces.ElementTypes;
import textDocBuilder.interfaces.IElement;
import textDocBuilder.interfaces.IElementIterator;

public class TextDocBuilderApi
{
	private AbstractElementFactory elementFactory;
	private Document document;

	public TextDocBuilderApi()
	{
		this.elementFactory = new ConcreteElementFactory();
		this.document = new Document();
	}

	public void addHeading()
	{
		IElement heading = elementFactory.createElement(ElementTypes.HEADING);
		document.addElement(heading);
	}

	public void addParagraph()
	{
		IElement paragraph = elementFactory.createElement(ElementTypes.PARAGRAPH);
		document.addElement(paragraph);
	}

	public void addTable()
	{
		IElement table = elementFactory.createElement(ElementTypes.TABLE);
		document.addElement(table);
	}

	public void renderDocument()
	{
		IElementIterator iterator = document.getIterator();
		while (iterator.hasNext())
		{
			IElement element = iterator.next();
			element.render();
		}
	}
}
